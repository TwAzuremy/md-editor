@use "sass:map";

$direction-map: (
        top: bottom,
        bottom: top,
        left: right,
        right: left
);

$axis-center: (
        x: (position: top, translate: Y),
        y: (position: left, translate: X)
);

@function reverse-direction($direction) {
    @if not map.has-key($direction-map, $direction) {
        @error "Invalid direction `#{$direction}`. Expected one of: #{map-keys($direction-map)}";
    }

    @return map.get($direction-map, $direction);
}

@function axis($direction) {
    @if $direction == "top" or $direction == "bottom" {
        @return "y";
    }

    @if $direction == "left" or $direction == "right" {
        @return "x";
    }
}

@mixin transform-center($axis) {
    $config: map.get($axis-center, $axis);

    #{map.get($config, position)}: 50%;
    transform: translate#{map.get($config, translate)}(-50%);
}

@mixin shadow($direction: bottom) {
    @if not map.has-key($direction-map, $direction) {
        @error "Invalid direction `#{$direction}`. Expected one of: #{map-keys($direction-map)}";
    }

    $x: 0px;
    $y: 2px;

    $shadow-map: (
            top: $x 0-$y,
            bottom: $x $y,
            left: 0-$y $x,
            right: $y $x
    );

    box-shadow: map.get($shadow-map, $direction) 8px var(--ui-color-shadow);
}

@mixin transparency-background($background, $opacity: 1, $z-index: 0) {
    &::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;

        background: $background;
        opacity: $opacity;

        z-index: $z-index;
    }
}

@mixin force-lock-size($size) {
    min-width: $size;
    width: $size;
    max-width: $size;

    min-height: $size;
    height: $size;
    max-height: $size;
}